%\VignetteIndexEntry{Genetic Variant Annotation}
%\VignetteDepends{GenomicRanges, Biostrings}
%\VignetteKeywords{sequence, sequencing, alignments}
%\VignettePackage{VariantAnnotation}
\documentclass[10pt]{article}

\usepackage{times}
\usepackage{hyperref}

\textwidth=6.5in
\textheight=8.5in
%\parskip=.3cm
\oddsidemargin=-.1in
\evensidemargin=-.1in
\headheight=-.3in

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}

\newcommand{\software}[1]{\textsf{#1}}
\newcommand{\R}{\software{R}}
\newcommand{\Bioconductor}{\software{Bioconductor}}
\newcommand{\VariantAnnotation}{\Rpackage{VariantAnnotation}}

\title{Genetic Variant Annotation}
\author{Valerie Obenchain}
\date{\today}

\begin{document} 

\maketitle

<<options, echo=FALSE>>=
options(width=72)
@


\section{Introduction}
This document illustrates how to annotate genetic variants with exisiting Bioconductor
tools. Specifically, we attempt to reproduce the functionality of the ANNOVAR software 
and Ensembl's Variant Effect Predictor. A brief outline of the capability of each tool
follows.

\subsection{ANNOVAR}
Annotations in ANNOVAR are presented as three categories: gene-based, filter-based 
and region-based. Sample databases are provided with the software or the user
can download UCSC tracks (or user supplied GFF3), along with mRNA FASTA
files to create a local annotation databse. Current gene
reference options are refGene, knownGene or ensGene. 

Gene-based annotations define the location of the variants, with respect to
the gene, e.g., intronic, exonic, intergenic etc.
In the case of an intergenic variant, the names of the flanking genes are provided. 
The functional consequence is provided for variants that fall inside exons. These
include synonomous or non-synonmous SNV, frameshift insertion or deletion,
nonframeshift insertion or deletion, frameshift or nonframeshift block substitution.
If there is a change in amino acid sequence it is provided as a 'sequence change',
where a standard nomenclature is used to describe the sequence changes.

Filter-based annotations allow the user to search for the presence of the variant
in the 1000 Genomes Project or dbSNP databases.

Region-based annotaions are used to identify variants at conserved genomic regions.
Overlaps between the variants and a user-specified conservation track are provided. 

\subsection{Ensembl Variant Effect Predictor}
Ensembl provides a web-based tool, Variant Effect Predictor, as well as an 
API interface for functional variant annotation for all species in Ensembl. 
For the web tool, input consists of variant positions, chromosome, allele and strand. 
Outputs are Ensembl IDs for the relevant transcript and gene, transcript coordinates, 
possible amino acids and the identifier of any existing variants that are co-located 
with the user-defined variant.

\section{Gene-based Annotations}
The goal of gene-based annotation is to define the location of the variant
with respect to the functional consequence on genes. 

When a variant falls in a coding exon region we can further determine if the
variant is non-synomous and the amino acid codes for the change. If a
variant matches multiple transcripts, results for all transcripts will
be provided. 
%%
The \Rpackage{VariantAnnotation} package contains a \Robject{GRanges} object 
consisting of 12 variants. We will use this as our sample data. 

<<data>>=
library(VariantAnnotation)
data(variants)
strand(variants) <- "+"
variants
@

Location of the variants with respect to genes can be obtained using
the \Rfunction{locateVariants} function. Required inputs
are the variant location in ranges, chromosome, and the allele that was
observed for this variant. New columns for the location, transcript ID 
and Entrez gene ID are added to the metadata of 'variants'. 
<<location>>=
library(TxDb.Hsapiens.UCSC.hg18.knownGene)
txdb <- Hsapiens_UCSC_hg18_knownGene_TxDb
loc <- locateVariants(variants, txdb)
head(loc)
@

For intergenic variants, gene ID's for genes 
on either side of the variant are provided.
<<intergenic>>=
loc[values(loc)[["location"]] == "intergenic", c("location", "txID", "geneID")]
@

The table below outlines how variant location is determined by 
matching the region specified or by the absence of GeneID.
\begin{table}[ht]
\begin{center}
\begin{tabular}{l|l|l|l|l|l}
\hline
Region & Tx & CDS & 5UTR & 3UTR \\
\hline
exon & yes &  yes & NA & NA \\
intron & yes & no & NA & NA \\
5UTR & yes & no & yes & no \\
3UTR & yes & no & no & yes \\
intergenic & no & NA & NA & NA\\
\hline
\end{tabular}
\end{center}
\caption{Determination of Variant Location}
\label{table:variantLocation}
\end{table}

%If a variant matches multiple regions within a transcript (i.e., both
%exon and intron) the highest priority position will be returned.
%\begin{table}[ht]
%\begin{center}
%\begin{tabular}{l|l|l}
%\hline
%Region & Precedence & Details \\
%\hline
%exon & 1 & variant falls within a coding exon \\
%splicing & * & variant is within 2-bp of a splicing junction \\
%ncRNA & 2 & variant overlaps a transcript without coding annotation in the gene
%definition \\
%UTR5 & 3 & variant overlaps a 5' untranslated region \\
%UTR3 & 3 & variant overlaps a 3' untranslated region \\
%intron & 4 & variant overlaps an intron \\
%upstream & 5 &  variant overlaps 1-kb region upstream of transcription start
%site \\
%downstream & 5 & variant overlaps 1-kb region downtream of transcription end
%site \\
%intergenic & 6 &        variant is in intergenic region  \\
%\hline
%\end{tabular}
%\end{center}
%\caption{Variant Location Precedence}
%\label{table:variantLocationPrecedence}
%\end{table}

Amino acid coding changes for variants that fall within exons can be 
determined with \Rfunction{predictCoding}. Three new columns, txID, aaRef,
and aa are added to the metadata of 'variants'.
<<coding>>=
library(BSgenome.Hsapiens.UCSC.hg18)
aaCoding <- predictCoding(variants, txdb, variantColumn="obsAllele",
    seqSource=Hsapiens)
head(aaCoding[,c("txID", "refAA", "obsAA")])
@
In the object returned, there is one row for each transcript hit by a variant
in an exon. For example, the variant in the sixth row of the 'variants'
object fell within an exon and hit four transcripts. The 'aaCoding'
result has four rows for this variant, one for each transcript.
<<codingResult>>=
aaCoding[1:4,]
@

\section{Filter-based}
Evaluate and filter out subsets of variants not appearing in public 
databases such as 1000 Genomes Project and dbSNP.

\section{Region-based} 
Annotate genomic elements other than genes. This is especially 
important for whole genome sequencing data as the vast majority of 
variants will be outside of protein encoding regions and their 
function effects cannot be asessed by gene-based annotations.
The following types of regions may be useful to annotate,\\
- conserved genomic\\
- predicted transcription factor binding sites\\
- predicted RNA secondary structures\\

\section{Other functionalities}
- Retrieve the nucleotide sequence in any user-specific genomic positions in
batch,\\
- identify a candidate gene list for Mendelian diseases from exome data,\\
- identify a list of SNPs from 1000 Genomes that are in strong LD with a GWAS
hit, and many other creative utilities.\\

\section{References}
Wang K, Li M, Hakonarson H, (2010), ANNOVAR: functional annotation of genetic 
variants from high-throughput sequencing data. Nucleic Acids Research, Vol 38,
No. 16, e164.\\

\noindent McLaren W, Pritchard B, RiosD, et. al., (2010), Deriving the consequences of
genomic variants with the Ensembl API and SNP Effect Predictor. Bioinformatics,
Vol. 26, No. 16, 2069-2070.

\section{Session Information}
<<sessionInfo>>=
sessionInfo()
@

\end{document}
