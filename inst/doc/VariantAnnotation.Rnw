%\VignetteIndexEntry{Genetic Variant Annotation}
%\VignetteDepends{GenomicRanges, Rsamtools, Biostrings}
%\VignetteKeywords{variants, sequence, sequencing, alignments}
%\VignettePackage{VariantAnnotation}
\documentclass[10pt]{article}

\usepackage{times}
\usepackage{hyperref}

\textwidth=6.5in
\textheight=8.5in
%\parskip=.3cm
\oddsidemargin=-.1in
\evensidemargin=-.1in
\headheight=-.3in

\newcommand{\Rfunction}[1]{{\texttt{#1}}}
\newcommand{\Robject}[1]{{\texttt{#1}}}
\newcommand{\Rpackage}[1]{{\textit{#1}}}
\newcommand{\Rmethod}[1]{{\texttt{#1}}}
\newcommand{\Rfunarg}[1]{{\texttt{#1}}}
\newcommand{\Rclass}[1]{{\textit{#1}}}
\newcommand{\Rcode}[1]{{\texttt{#1}}}

\newcommand{\software}[1]{\textsf{#1}}
\newcommand{\R}{\software{R}}
\newcommand{\Bioconductor}{\software{Bioconductor}}
\newcommand{\VariantAnnotation}{\Rpackage{VariantAnnotation}}

\title{Genetic Variant Annotation}
\author{Valerie Obenchain and Michael Lawrence}
\date{\today}

\begin{document} 

\maketitle

<<options, echo=FALSE>>=
options(width=72)
@

\section{Introduction}
This document illustrates how to annotate genetic variants with existing Bioconductor
tools. Specifically, we attempt to reproduce the functionality of the ANNOVAR software 
and Ensembl's Variant Effect Predictor. A brief outline of the capability of each tool
follows.

\subsection{ANNOVAR}
Annotations in ANNOVAR are presented as three categories: gene-based, filter-based 
and region-based. Sample databases are provided with the software or the user
can download UCSC tracks along with mRNA FASTA
files to create a local annotation database. Current gene
reference options are refGene, knownGene or ensGene. 

Gene-based annotations define the location of the variants, with respect to
the gene, e.g., intronic, exonic, intergenic etc.
In the case of an intergenic variant, the names of the flanking genes are provided. 
The functional consequence is provided for variants that fall inside exons. These
include synonymous or non-synonymous SNV, frameshift insertion or deletion,
non-frameshift insertion or deletion, frameshift or non-frameshift block substitution.
If there is a change in amino acid sequence it is provided as a 'sequence change',
where a standard nomenclature is used to describe the sequence changes.

Filter-based annotations allow the user to search for the presence of the variant
in the 1000 Genomes Project or dbSNP databases.

Region-based annotations are used to identify variants at conserved genomic regions.
Overlaps between the variants and a user-specified conservation track are provided. 

\subsection{Ensembl Variant Effect Predictor}
Ensembl provides a web-based tool, Variant Effect Predictor, as well as an 
API interface for functional variant annotation for all species in Ensembl. 
For the web tool, input consists of variant positions, chromosome, allele and strand. 
Outputs are Ensembl IDs for the relevant transcript and gene, transcript coordinates, 
possible amino acids and the identifier of any existing variants that are co-located 
with the user-defined variant.

\section{Variant Location and Amino Acid Coding}
In this section we identify the location of the variant
with respect to the functional consequence on genes. 

%%
The \Rpackage{VariantAnnotation} package contains a \Robject{GRanges} object 
consisting of variants from the ANNOVAR web site and other modified
variants. We will use this as our sample data. 

<<data>>=
library(VariantAnnotation)
data(variants)
strand(variants) <- "+"
variants
@

Variant location with respect to genes can be obtained using
the \Rfunction{locateVariants} function. Required inputs
for the \Robject{query} are the variant location in ranges
and chromosome. New columns for the location, transcript ID 
and Entrez gene ID are added to the metadata of 'variants'. 
<<location>>=
library(TxDb.Hsapiens.UCSC.hg18.knownGene)
txdb <- Hsapiens_UCSC_hg18_knownGene_TxDb
loc <- locateVariants(variants, txdb)
head(loc)
@

For intergenic variants, gene ID's for the flanking genes 
on either side of the variant are provided.
<<intergenic>>=
loc[values(loc)[["location"]] == "intergenic", c("location", "txID", "geneID")]
@

Currently, if a variant matches multiple regions within a transcript (i.e., both
exon and intron) the highest priority position will be returned. A
prioritization scheme is outlined in table
\ref{table:variantLocationPrecedence}.
\begin{table}[ht]
\begin{center}
\begin{tabular}{l|l|l}
\hline
Region & Precedence & Details \\
\hline
coding & 1 & variant overlaps any portion of a coding exon \\
%splicing & * & variant is within 2-bp of a splicing junction \\
%ncRNA & 2 & variant overlaps a transcript without coding annotation in the gene
%definition \\
UTR5 & 2 & variant overlaps any portion of a 5' untranslated region \\
UTR3 & 2 & variant overlaps any portion of a 3' untranslated region \\
intron & 3 & variant overlaps a transcript but does not fall within a coding
exon \\
%upstream & 5 &  variant overlaps 1-kb region upstream of transcription start
%site \\
%downstream & 5 & variant overlaps 1-kb region downtream of transcription end
%site \\
intergenic & 4 & variant is in an intergenic region (i.e., not in a transcript) \\
\hline
\end{tabular}
\end{center}
\caption{Variant Location Precedence}
\label{table:variantLocationPrecedence}
\end{table}

Amino acid coding changes for variants that fall within exons can be 
determined with \Rfunction{predictCoding}. This method accepts a
\Robject{TranscriptDb} or \Robject{GRangesList} as the subject. The 
coding variants we are intrested in fall in chromosomes 1, 2 and 16. 
In the interest of efficiency we create a
subset \Robject{GRangesList} with the chromosomes
of interest but could also have used the \Robject{TranscriptDb} object.
<<coding_setup>>=
library(BSgenome.Hsapiens.UCSC.hg18)
cdsByTx <- cdsBy(txdb)
grl <- keepSeqlevels(cdsByTx, c("chr1", "chr2", "chr16"))
@

The object returned from \Rmethod{predictCoding} is a 
\Robject{GRanges} containing only the variants that
matched a coding region. New columns of metadata,
include the metatdata from the \Robject{subject},
tx\_ID, CodonChange, AAChange and Consequence.

<<coding_result>>= 
aaCoding <- predictCoding(variants, grl, alleles="alleles",
    seqSource=Hsapiens)
head(aaCoding[,c("CodonChange", "AAChange", "Consequence")])
@
Each row of the result represents a transcript
matched by a variant. When a variant matches multiple
transcripts, we see multiple rows for that variant.
For example, the variant in the sixth row of the 'variants'
object fell within a coding region and hit four transcripts. 
The 'aaCoding' result shows four rows for this variant, 
one for each transcript.
<<coding_result_multrows>>= 
aaCoding[1:4,]
@

\begin{table}[ht]
\begin{center}
\begin{tabular}{l|l|l|l}
\hline
alleles & AA Coding Provided & Classification & Details \\
\hline
G/T & yes & synonymous or nonsynonymous & single basepair replacement\\
G/TG & no & frameshift & substitution with incompatible number of replacement
basepairs \\
G/TGCG & yes & synonymous or nonsynonymous & substitution with compatible number of replacement
basepairs \\
-/G & no & frameshift & insertion \\
A/- & no & frameshift & deletion \\
\hline
\end{tabular}
\end{center}
\caption{Amino Acid Coding of Variants}
\label{table:variantLocationPrecedence}
\end{table}

\section{Filtering}
Evaluate and filter out subsets of variants not appearing in public 
databases such as 1000 Genomes Project and dbSNP.

\subsection{Filter options}

Region Based : \\
Annotate genome elements other than genes. This is especially 
important for whole genome sequencing data as the vast majority of 
variants will be outside of protein encoding regions and their 
function effects cannot be assessed by gene-based annotations.
The following types of regions may be useful to annotate,\\
- conserved genomic\\
- predicted transcription factor binding sites\\
- predicted RNA secondary structures\\

\subsection{Filter composition} 

\subsection{Filter application}


\section{Other functionalities}
- Retrieve the nucleotide sequence in any user-specific genomic positions in
batch,\\
- identify a candidate gene list for Mendelian diseases from exome data,\\
- identify a list of SNPs from 1000 Genomes that are in strong LD with a GWAS
hit, and many other creative utilities.\\

\section{References}
Wang K, Li M, Hakonarson H, (2010), ANNOVAR: functional annotation of genetic 
variants from high-throughput sequencing data. Nucleic Acids Research, Vol 38,
No. 16, e164.\\

\noindent McLaren W, Pritchard B, RiosD, et. al., (2010), Deriving the consequences of
genomic variants with the Ensembl API and SNP Effect Predictor. Bioinformatics,
Vol. 26, No. 16, 2069-2070.

\section{Session Information}
<<sessionInfo>>=
sessionInfo()
@

\end{document}
